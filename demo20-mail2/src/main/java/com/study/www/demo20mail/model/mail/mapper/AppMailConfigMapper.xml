<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xunjie.www.model.common.mail.mapper.AppMailConfigMapper" >
  <resultMap id="BaseResultMap" type="cn.xunjie.www.model.common.mail.AppMailConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mailHost" property="mailhost" jdbcType="VARCHAR" />
    <result column="mailUserName" property="mailusername" jdbcType="VARCHAR" />
    <result column="mailPassword" property="mailpassword" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="senderAddress" property="senderaddress" jdbcType="VARCHAR" />
    <result column="sendNum" property="sendnum" jdbcType="INTEGER" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="CreateBy" property="createby" jdbcType="VARCHAR" />
    <result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="UpdateBy" property="updateby" jdbcType="VARCHAR" />
    <result column="IsDel" property="isdel" jdbcType="INTEGER" />
    <result column="authCodeTime" property="authcodetime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mailHost, mailUserName, mailPassword, nickname, senderAddress, sendNum, Status, 
    CreateTime, CreateBy, UpdateTime, UpdateBy, IsDel, authCodeTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xunjie.www.model.common.mail.AppMailConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_mail_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from app_mail_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from app_mail_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xunjie.www.model.common.mail.AppMailConfigExample" >
    delete from app_mail_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xunjie.www.model.common.mail.AppMailConfig" >
    insert into app_mail_config (id, mailHost, mailUserName, 
      mailPassword, nickname, senderAddress, 
      sendNum, Status, CreateTime, 
      CreateBy, UpdateTime, UpdateBy, 
      IsDel, authCodeTime)
    values (#{id,jdbcType=INTEGER}, #{mailhost,jdbcType=VARCHAR}, #{mailusername,jdbcType=VARCHAR}, 
      #{mailpassword,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{senderaddress,jdbcType=VARCHAR}, 
      #{sendnum,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{createby,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, #{updateby,jdbcType=VARCHAR}, 
      #{isdel,jdbcType=INTEGER}, #{authcodetime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.xunjie.www.model.common.mail.AppMailConfig" >
    insert into app_mail_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mailhost != null" >
        mailHost,
      </if>
      <if test="mailusername != null" >
        mailUserName,
      </if>
      <if test="mailpassword != null" >
        mailPassword,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="senderaddress != null" >
        senderAddress,
      </if>
      <if test="sendnum != null" >
        sendNum,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="createby != null" >
        CreateBy,
      </if>
      <if test="updatetime != null" >
        UpdateTime,
      </if>
      <if test="updateby != null" >
        UpdateBy,
      </if>
      <if test="isdel != null" >
        IsDel,
      </if>
      <if test="authcodetime != null" >
        authCodeTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mailhost != null" >
        #{mailhost,jdbcType=VARCHAR},
      </if>
      <if test="mailusername != null" >
        #{mailusername,jdbcType=VARCHAR},
      </if>
      <if test="mailpassword != null" >
        #{mailpassword,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="senderaddress != null" >
        #{senderaddress,jdbcType=VARCHAR},
      </if>
      <if test="sendnum != null" >
        #{sendnum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null" >
        #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="authcodetime != null" >
        #{authcodetime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xunjie.www.model.common.mail.AppMailConfigExample" resultType="java.lang.Integer" >
    select count(*) from app_mail_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update app_mail_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mailhost != null" >
        mailHost = #{record.mailhost,jdbcType=VARCHAR},
      </if>
      <if test="record.mailusername != null" >
        mailUserName = #{record.mailusername,jdbcType=VARCHAR},
      </if>
      <if test="record.mailpassword != null" >
        mailPassword = #{record.mailpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.senderaddress != null" >
        senderAddress = #{record.senderaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.sendnum != null" >
        sendNum = #{record.sendnum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createby != null" >
        CreateBy = #{record.createby,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        UpdateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateby != null" >
        UpdateBy = #{record.updateby,jdbcType=VARCHAR},
      </if>
      <if test="record.isdel != null" >
        IsDel = #{record.isdel,jdbcType=INTEGER},
      </if>
      <if test="record.authcodetime != null" >
        authCodeTime = #{record.authcodetime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update app_mail_config
    set id = #{record.id,jdbcType=INTEGER},
      mailHost = #{record.mailhost,jdbcType=VARCHAR},
      mailUserName = #{record.mailusername,jdbcType=VARCHAR},
      mailPassword = #{record.mailpassword,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      senderAddress = #{record.senderaddress,jdbcType=VARCHAR},
      sendNum = #{record.sendnum,jdbcType=INTEGER},
      Status = #{record.status,jdbcType=INTEGER},
      CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      CreateBy = #{record.createby,jdbcType=VARCHAR},
      UpdateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      UpdateBy = #{record.updateby,jdbcType=VARCHAR},
      IsDel = #{record.isdel,jdbcType=INTEGER},
      authCodeTime = #{record.authcodetime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xunjie.www.model.common.mail.AppMailConfig" >
    update app_mail_config
    <set >
      <if test="mailhost != null" >
        mailHost = #{mailhost,jdbcType=VARCHAR},
      </if>
      <if test="mailusername != null" >
        mailUserName = #{mailusername,jdbcType=VARCHAR},
      </if>
      <if test="mailpassword != null" >
        mailPassword = #{mailpassword,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="senderaddress != null" >
        senderAddress = #{senderaddress,jdbcType=VARCHAR},
      </if>
      <if test="sendnum != null" >
        sendNum = #{sendnum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null" >
        CreateBy = #{createby,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null" >
        UpdateBy = #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        IsDel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="authcodetime != null" >
        authCodeTime = #{authcodetime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xunjie.www.model.common.mail.AppMailConfig" >
    update app_mail_config
    set mailHost = #{mailhost,jdbcType=VARCHAR},
      mailUserName = #{mailusername,jdbcType=VARCHAR},
      mailPassword = #{mailpassword,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      senderAddress = #{senderaddress,jdbcType=VARCHAR},
      sendNum = #{sendnum,jdbcType=INTEGER},
      Status = #{status,jdbcType=INTEGER},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      CreateBy = #{createby,jdbcType=VARCHAR},
      UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      UpdateBy = #{updateby,jdbcType=VARCHAR},
      IsDel = #{isdel,jdbcType=INTEGER},
      authCodeTime = #{authcodetime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>